[gd_scene load_steps=12 format=2]

[ext_resource path="res://Levels/BaseLevel/BaseLevel.gd" type="Script" id=1]
[ext_resource path="res://meshlib.tres" type="MeshLibrary" id=2]
[ext_resource path="res://Levels/BaseLevel/World.gd" type="Script" id=3]
[ext_resource path="res://Levels/BaseLevel/PlayerController.gd" type="Script" id=4]
[ext_resource path="res://Themes/theme.tres" type="Theme" id=5]
[ext_resource path="res://Levels/BaseLevel/EnemyController.gd" type="Script" id=6]
[ext_resource path="res://UI/MutationPicker.tscn" type="PackedScene" id=7]
[ext_resource path="res://Levels/BaseLevel/Camera.gd" type="Script" id=10]

[sub_resource type="Environment" id=1]
background_mode = 1
background_color = Color( 0.14902, 0.137255, 0.180392, 1 )
ambient_light_color = Color( 1, 1, 1, 1 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform float vignette_intensity = 0.4;
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;
uniform vec4 vignette_rgb : hint_color = vec4(0.0, 0.0, 0.0, 1.0);

float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment(){
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec4 text = texture(TEXTURE, UV);
	
	text.rgba *= (vignette_rgb.rgba);
	text.rgba *= (1.0 - vignette(UV));
	
	COLOR = vec4((text.rgb)*color.rgb,text.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/vignette_intensity = 0.3
shader_param/vignette_opacity = 0.4
shader_param/vignette_rgb = Color( 0, 0, 0, 1 )

[node name="BaseLevel" type="Spatial"]
script = ExtResource( 1 )

[node name="PlayerController" type="Node" parent="."]
script = ExtResource( 4 )

[node name="MoveMarkers" type="Spatial" parent="PlayerController"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, 0.5 )

[node name="EnemyController" type="Node" parent="."]
script = ExtResource( 6 )

[node name="UI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="EndTurn" type="Button" parent="UI"]
visible = false
margin_left = 18.0
margin_top = 16.0
margin_right = 175.0
margin_bottom = 73.0
text = "End turn"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PhaseLabel" type="Label" parent="UI"]
anchor_right = 1.0
margin_bottom = 49.0
text = "Phase label"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MutationPicker" parent="UI" instance=ExtResource( 7 )]
visible = false

[node name="PickUnitLabel" type="Label" parent="UI"]
visible = false
anchor_right = 1.0
margin_top = 73.0
margin_bottom = 98.0
text = "Pick someone for the mutation"
align = 1
valign = 1
uppercase = true

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.707107, 0.353553, -0.612372, 0, 0.866025, 0.5, 0.707107, -0.353553, 0.612372, -2.505, 2.464, 3.302 )
environment = SubResource( 1 )
projection = 1
size = 6.96445
script = ExtResource( 10 )

[node name="CanvasLayer" type="CanvasLayer" parent="Camera"]

[node name="ColorRect" type="ColorRect" parent="Camera/CanvasLayer"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="World" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, 0.5 )
script = ExtResource( 3 )

[node name="GridMap" type="GridMap" parent="World"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, -0.5, -0.5 )
mesh_library = ExtResource( 2 )
cell_size = Vector3( 1, 1, 1 )
data = {
"cells": PoolIntArray(  )
}
__meta__ = {
"_editor_clip_": 0
}

[node name="SpawnLocations" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, 0.5 )

[connection signal="enemy_phase_enter" from="." to="EnemyController" method="_on_BaseLevel_enemy_phase_enter"]
[connection signal="player_phase_enter" from="." to="PlayerController" method="_on_BaseLevel_player_phase_enter"]
[connection signal="player_phase_leave" from="." to="PlayerController" method="_on_BaseLevel_player_phase_leave"]
[connection signal="finished_turn" from="EnemyController" to="." method="_on_EnemyController_finished_turn"]
[connection signal="pressed" from="UI/EndTurn" to="." method="_on_EndTurn_pressed"]
[connection signal="picked_mutation" from="UI/MutationPicker" to="." method="_on_MutationPicker_picked_mutation"]
